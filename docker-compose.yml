version: "3.9"

services:
  db:
    image: postgres:15-alpine
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - db-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5

  strapi:
    build:
      context: ./strapi
    restart: unless-stopped
    env_file: .env
    environment:
      DATABASE_CLIENT: postgres
      DATABASE_HOST: db
      DATABASE_PORT: 5432
      DATABASE_NAME: ${POSTGRES_DB}
      DATABASE_USERNAME: ${POSTGRES_USER}
      DATABASE_PASSWORD: ${POSTGRES_PASSWORD}
      NODE_ENV: ${NODE_ENV}
      APP_KEYS: ${APP_KEYS}
      API_TOKEN_SALT: ${API_TOKEN_SALT}
      ADMIN_JWT_SECRET: ${ADMIN_JWT_SECRET}
      JWT_SECRET: ${JWT_SECRET}
      STRAPI_HOST: ${STRAPI_HOST}
      STRAPI_PORT: ${STRAPI_PORT}
      STRAPI_URL: ${STRAPI_URL}
    depends_on:
      db:
        condition: service_healthy
    volumes:
      # только uploads должны жить вне образа, код — внутри образа
      - strapi-uploads:/opt/app/public/uploads
    expose:
      - "1337"

  web:
    # multi-stage: билд Vue и Nginx со статикой и прокси на Strapi
    build:
      context: ./frontend
    restart: unless-stopped
    environment:
      VITE_BACKEND_URL_API: ${VITE_BACKEND_URL_API}
      VITE_BACKEND_YOUTUBE_API_KEY: ${VITE_BACKEND_URL_API}
      VITE_BACKEND_REGISTER_API: ${VITE_BACKEND_REGISTER_API}
    ports:
      - "80:80"
    depends_on:
      - strapi
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro

volumes:
  db-data:
  strapi-uploads:
